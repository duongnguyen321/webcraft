// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  userId    String    @unique // Corresponds to user_id from duonguyen.site
  username  String
  email     String    @unique
  imageUrl  String?
  role      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
  geminiKeys GeminiKey[]
  sessions  Session[]
}

model Project {
  id        String    @id @default(uuid())
  name      String
  // You can add more project-specific fields here
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    String
}

model GeminiKey {
  id        String    @id @default(uuid())
  key       String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  id        String    @id @default(uuid())
  token     String    @unique
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime  @default(now())
  expiresAt DateTime? // Optional: Add an expiration date for sessions
}
